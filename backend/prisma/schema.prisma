// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  username      String?
  name          String?
  avatar        String?
  refresh_token String?
  access_token  String?
  google_id     String?
  google_token  String?
  videos        Video[]
  comment       Comment[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Video {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String?
  thumbnail   String?
  video_file  String?
  url         String?
  views       Int?      @default(0)
  likes       Int?      @default(0)
  duration    String?
  isPublished Boolean   @default(false)
  user        User      @relation(fields: [user_id], references: [id])
  user_id     Int
  comment     Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model WatchHistory {
  id        Int      @id @default(autoincrement())
  user_id   Int
  video_id  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(uuid()) @map("_id")
  text      String
  user_id   Int
  video_id  Int
  user      User     @relation(fields: [user_id], references: [id])
  video     Video    @relation(fields: [video_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
